FROM php:7.4-fpm-alpine as base

RUN echo @testing http://nl.alpinelinux.org/alpine/edge/testing >> /etc/apk/repositories && \
    echo /etc/apk/respositories && \
    apk update && \
    apk add --no-cache bash

RUN set -ex && apk add postgresql-dev libpng-dev libzip-dev icu-dev \
    oniguruma-dev libxml2-dev supervisor $PHPIZE_DEPS \
    && docker-php-ext-install pdo pdo_pgsql bcmath mbstring \
    gd sockets zip iconv intl xml json dom zip opcache pcntl \
    && pecl install redis && docker-php-ext-enable redis \
    && rm -rf /var/cache/apk/*

# Install composer
ENV COMPOSER_ALLOW_SUPERUSER=1 COMPOSER_HOME=/tmp COMPOSER_MEMORY_LIMIT=-1
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && composer clear-cache && rm -rf /tmp/composer-setup.php /tmp/.htaccess

# alias for artisan
RUN echo '#! /bin/sh' >> /bin/art \
    && echo '/usr/local/bin/php /app/artisan "$@"' >> /bin/art \
    && chmod u+x /bin/art

FROM base AS app

COPY ./composer.json /app/composer.json

WORKDIR /app

RUN composer install --no-scripts --no-autoloader && composer update --no-autoloader --no-scripts

COPY ./ /app

RUN crontab -l | { cat; echo "* * * * * php /app/artisan schedule:run"; } | crontab -

ENV TELESCOPE_ENABLED=false
RUN bash -c 'mkdir -p storage/framework/{sessions,views,cache}'
RUN mv .env.dev .env && composer dumpautoload -o && art key:generate

RUN rm -rf /app/storage/logs && ln -s /logs /app/storage \
    && rm -rf /app/public/storage && ln -s /files /app/public/storage && chmod 777 -R /app/storage

COPY docker/dev/config/fpm/www.conf /usr/local/etc/php-fpm.d/www.conf
COPY docker/dev/config/fpm/php.ini /usr/local/etc/php/php.ini

COPY docker/dev/config/supervisor/laravel-worker.conf /usr/local/etc/supervisor/conf.d/laravel-worker.conf
COPY docker/dev/config/supervisor/supervisord.conf /usr/local/etc/supervisord.conf

RUN chown -R www-data:www-data /app && chown www-data:www-data /bin/art

CMD php-fpm
